# --------------------------------------------------------------
#  customTracker_IS.py
#  Version: 1.0.2
#  Last Updated: June 17th, 2019
# --------------------------------------------------------------

import nuke

def customTrackerIS():

	code = '''
# get a list of all transform/cornerpin nodes before the tracker creates a new one
allTransformsBefore = nuke.allNodes("Transform", recurseGroups=True)
allCornerPinsBefore = nuke.allNodes("CornerPin2D", recurseGroups=True)

# --------------------------------------------------------------
# DEFAULT SCRIPT FROM TRACKER NODE
# --------------------------------------------------------------
tracker = nuke.thisNode()
cornerPinOption = tracker.knob("cornerPinOptions").getValue()
if cornerPinOption == 0:
    tracker.knob("createPinUseCurrentFrame").execute()
elif cornerPinOption == 1:
    tracker.knob("createPinUseReferenceFrame").execute()
elif cornerPinOption == 2:
    tracker.knob("createPinUseCurrentFrameBaked").execute()
elif cornerPinOption == 3:
    tracker.knob("createPinUseReferenceFrameBaked").execute()
elif cornerPinOption == 4:
    tracker.knob("createTransformStabilize").execute()
elif cornerPinOption == 5:
    tracker.knob("createTransformMatchMove").execute()
elif cornerPinOption == 6:
    tracker.knob("createTransformStabilizeBaked").execute()
elif cornerPinOption == 7:
    tracker.knob("createTransformMatchMoveBaked").execute()
# --------------------------------------------------------------
# --------------------------------------------------------------

# get a list of all transform/cornerpin nodes after the tracker has created a new one
allTransformsAfter = nuke.allNodes("Transform", recurseGroups=True)
allCornerPinsAfter = nuke.allNodes("CornerPin2D", recurseGroups=True)

try: [node for node in allTransformsAfter if node not in allTransformsBefore][0].knob("label").setValue('this is a label')
#try:
#	for node in allTransformsAfter:
#		if node not in allTransformsBefore:
#			allTransformsBefore[0].knob("label").setValue('this is a label')

# except: [node for node in nuke.allNodes("CornerPin2D", recurseGroups=True) if node not in allCornerPin][0].knob("label").setValue("<html><center><b>from: " + trackerName + "\\nframe: " + "%s</b></center></html>"%refFrame)
except: 
	for node in allCornerPinsAfter:
		if node not in allCornerPinsBefore:
			allCornerPinsBefore[0].knob("label").setValue('this is also a label')
	'''

	nuke.thisNode().knob('createCornerPin').setValue(code)
