# --------------------------------------------------------------
#  customTracker_IS.py
#  Version: 1.0.1
#  Last Updated: June 12th, 2019
# --------------------------------------------------------------

import nuke
import nukescripts

def customTracker_IS():
	code =

	tracker = nuke.thisNode() 
	cornerPinOption = tracker.knob("cornerPinOptions").getValue() 
	if cornerPinOption == 0: 
	  tracker.knob("createPinUseCurrentFrame").execute() 
	elif cornerPinOption == 1: 
	  tracker.knob("createPinUseReferenceFrame").execute() 
	elif cornerPinOption == 2: 
	  tracker.knob("createPinUseCurrentFrameBaked").execute() 
	elif cornerPinOption == 3: 
	  tracker.knob("createPinUseReferenceFrameBaked").execute() 
	elif cornerPinOption == 4: 
	  tracker.knob("createTransformStabilize").execute() 
	elif cornerPinOption == 5: 
	  tracker.knob("createTransformMatchMove").execute() 
	elif cornerPinOption == 6: 
	  tracker.knob("createTransformStabilizeBaked").execute() 
	elif cornerPinOption == 7: 
	  tracker.knob("createTransformMatchMoveBaked").execute() 


	stabilize = False 
	def copyKnobValuesAtKeys(src, dst, chan): 
	  if src.isAnimated(): 
	    dst.setAnimated(chan) 
	    for Idx in range(src.getNumKeys(chan)): 
	      t = src.getKeyTime(Idx, chan) 
	      dst.setValueAt(src.getValueAt(t,chan), t, chan) 
	  else: 
	    dst.setValue( src.getValue(chan), chan ) 
	tracker = nuke.thisNode() 
	x = tracker.xpos() 
	y = tracker.ypos() 
	w = tracker.screenWidth() 
	h = tracker.screenHeight() 
	m = int(x + w/2) 
	transform =  nuke.nodes.Transform() 


	if 'stabilize' in locals() and stabilize == True: 
	# CHANGE TRANSFORM NODE NAME
	  # proposedName = 'Transform_Stabilize' 
	  proposedName = str(tracker.knob('name').value()) + '_Stabilize'
	else:
	# CHANGE TRANSFORM NODE NAME
	  # proposedName = 'Transform_MatchMove' 
	  proposedName = str(tracker.knob('name').value()) + '_Matchmove'

	# SET LABLEL
	proposedLabel = 'REF: ' + str(tracker.knob('reference_frame').value())
	transform.knob('label').setValue(proposedLabel)
	  
	idx = 1 
	while True: 
	  if not nuke.exists(proposedName + str(idx)): 
	    actualName = proposedName + str(idx) 
	    break 
	  idx = idx + 1 
	transform.setName(actualName) 
	transform.setInput(0,None) 
	transform.setXYpos(int(m + w), int(y + w/2)) 

	copyKnobValuesAtKeys( tracker['translate'], transform['translate'], 0 ) 
	copyKnobValuesAtKeys( tracker['translate'], transform['translate'], 1 ) 
	copyKnobValuesAtKeys( tracker['rotate'], transform['rotate'], 0 ) 
	copyKnobValuesAtKeys( tracker['scale'], transform['scale'], 0 ) 
	copyKnobValuesAtKeys( tracker['scale'], transform['scale'], 1 ) 
	copyKnobValuesAtKeys( tracker['center'], transform['center'], 0 ) 
	copyKnobValuesAtKeys( tracker['center'], transform['center'], 1 ) 
	transform['filter'].setValue( tracker['filter'].enumName( int(tracker['filter'].getValue())) ) 

	srcTransformKnob = tracker['transform'] 
	srcTransformName = srcTransformKnob.enumName(int(srcTransformKnob.getValue())) 

	srcTransformIsStabilize = (srcTransformName.find('stabilize')==0) 
	invertDueToDestStabilize = (stabilize and not srcTransformIsStabilize) 
	invertDueToSrcStabilize = ((not stabilize) and srcTransformIsStabilize) 
	needToInvert = (invertDueToDestStabilize or invertDueToSrcStabilize) 
	if needToInvert: 
	  transKnob = transform['translate'] 
	  rotateKnob = transform['rotate'] 
	  scaleKnob = transform['scale'] 
	  centerKnob = transform['center'] 
	  for chan in range(2): 
	    for Idx in range(centerKnob.getNumKeys(chan)): 
	      t = centerKnob.getKeyTime(Idx, chan) 
	      centerKnob.setValueAt( centerKnob.getValueAt(t,chan) + transKnob.getValueAt(t,chan), t, chan) 
	    for Idx in range(scaleKnob.getNumKeys(chan)): 
	      t = scaleKnob.getKeyTime(Idx, chan) 
	      scaleKnob.setValueAt( 1/scaleKnob.getValueAt(t,chan), t, chan) 
	    for Idx in range(transKnob.getNumKeys(chan)): 
	      t = transKnob.getKeyTime(Idx, chan) 
	      transKnob.setValueAt( -transKnob.getValueAt(t,chan), t, chan) 
	  for Idx in range(rotateKnob.getNumKeys(0)): 
	    t = rotateKnob.getKeyTime(Idx, 0) 
	rotateKnob.setValueAt( -rotateKnob.getValueAt(t,0), t, 0) 


	tracker.knob('createConerPin').setValue(code)
